{"version":3,"sources":["components/ContactPage.js"],"names":["SocialIcons","lazy","HomeBtn","LogoComponent","ParticlesComponent","BigTitle","Box","styled","motion","div","props","theme","body","mediaQueries","Main","text","Title","h2","Shared","css","Form","form","Input","input","TextArea","textarea","Button","button","ContactPage","useForm","register","handleSubmit","reset","errors","formState","useState","disabled","setDisabled","onSubmit","data","a","name","email","subject","message","templateParams","emailjs","send","process","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","toastId","console","log","lightTheme","fallback","initial","opacity","animate","transition","duration","exit","id","noValidate","type","required","value","maxLength","placeholder","pattern","rows","top","right"],"mappings":"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","file":"static/js/22.fef245d8.chunk.js","sourcesContent":["import { useState, lazy, Suspense } from 'react';\nimport { useForm } from 'react-hook-form';\nimport styled, { ThemeProvider, css } from \"styled-components\";\nimport emailjs from '@emailjs/browser';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { motion } from \"framer-motion\";\nimport { lightTheme, mediaQueries } from \"./Themes\";\nimport Loading from \"../subComponents/Loading\";\n\n//Components\nconst SocialIcons = lazy(() => import(\"../subComponents/SocialIcons\"));\nconst HomeBtn = lazy(() => import(\"../subComponents/HomeButton\"));\nconst LogoComponent = lazy(() => import(\"../subComponents/LogoComponent\"));\nconst ParticlesComponent = lazy(() =>\n  import(\"../subComponents/ParticlesComponent\")\n);\nconst BigTitle = lazy(() => import(\"../subComponents/BigTitle\"));\n\nconst Box = styled(motion.div)`\n  background-color: ${(props) => props.theme.body};\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n\n  ${mediaQueries(50)`\n            flex-direction:column;  \n            padding:8rem 0;\n            height:auto;\n            &>*:nth-child(5){\n              margin-bottom:5rem;\n            }\n           \n  `};\n  ${mediaQueries(30)`\n           \n            &>*:nth-child(5){\n              margin-bottom:4rem;\n            }\n           \n  `};\n`;\n\nconst Main = styled(motion.div)`\n  border: 2px solid ${(props) => props.theme.text};\n  color: ${(props) => props.theme.text};\n  background-color: ${(props) => props.theme.body};\n  padding: 2rem;\n  width: 30vw;\n  height: 60vh;\n  z-index: 3;\n  line-height: 1.5;\n  box-shadow: 0px 0px 20px 0px rgba(0,0,0,0.2);\n\n  ${mediaQueries(60)`\n            height: 55vh;\n  `};\n\n  ${mediaQueries(50)`\n              width: 50vw;\n              height: max-content;\n\n  `};\n\n  font-family: \"Ubuntu Mono\", monospace;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  &:hover {\n    color: ${(props) => props.theme.body};\n    background-color: ${(props) => props.theme.text};\n  }\n`;\n\nconst Title = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: calc(1em + 1vw);\n\n  ${mediaQueries(60)`\n          font-size:calc(0.8em + 1vw);\n  `};\n\n  ${mediaQueries(50)`\n          font-size:calc(1em + 2vw);\n          margin-bottom:1rem;\n  `};\n\n  ${mediaQueries(30)`\n                      font-size:calc(1em + 1vw);\n  `};\n  ${mediaQueries(25)`\n                      font-size:calc(0.8em + 1vw);\n                      svg{\n                        width:30px;\n                        height:30px;\n                      }\n  `};\n\n  ${Main}:hover & {\n    & > * {\n      fill: ${(props) => props.theme.body};\n    }\n  }\n\n  & > *:first-child {\n    margin-right: 1rem;\n  }\n`;\n\nconst Shared = css`\n  background-color: #eee;\n  height: 40px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n  margin: 10px 0 20px 0;\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  max-width: 700px;\n  padding: 0px 15px;\n  box-sizing: border-box;\n  \n`;\n\nconst Input = styled.input`\n  display: block;\n  width: 100%;\n  ${Shared};\n`;\n\nconst TextArea = styled.textarea`\n  background-color: #eee;\n  width: 100%;\n  min-height: 100px;\n  resize: none;\n  ${Shared};\n`;\n\nconst Button = styled.button`\n  display: block;\n  background-color: #aaa;\n  font-size: 1rem;\n  border: 0;\n  border-radius: 5px;\n  padding: 0 20px;\n  cursor: pointer;\n  box-sizing: border-box;\n  height: 40px;\n`;\n\nconst ContactPage = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors }\n  } = useForm();\n  const [disabled, setDisabled] = useState(false);\n\n  // Function that displays a success toast on bottom right of the page when form submission is successful\n  const toastifySuccess = () => {\n    toast('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n      toastId: 'notifyToast'\n    });\n  };\n\n  // Function called on submit that uses emailjs to send email of valid contact form\n  const onSubmit = async (data) => {\n    // Destrcture data object\n    const { name, email, subject, message } = data;\n    try {\n      // Disable form while processing submission\n      setDisabled(true);\n\n      // Define template params\n      const templateParams = {\n        name,\n        email,\n        subject,\n        message\n      };\n\n      // Use emailjs to email contact form data\n      await emailjs.send(\n        process.env.REACT_APP_SERVICE_ID,\n        process.env.REACT_APP_TEMPLATE_ID,\n        templateParams,\n        process.env.REACT_APP_USER_ID\n      );\n\n      // Reset contact form fields after submission\n      reset();\n      // Display success toast\n      toastifySuccess();\n      // Re-enable form submission\n      setDisabled(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={lightTheme}>\n      <Suspense fallback={<Loading />}>\n        <Box\n          key=\"contact\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1, transition: { duration: 1 } }}\n          exit={{ opacity: 0, transition: { duration: 0.5 } }}\n        >\n          <LogoComponent theme=\"light\" />\n          <HomeBtn />\n          <SocialIcons theme=\"light\" />\n          <ParticlesComponent theme=\"light\" />\n\n          <Main>\n            <Title>\n              Send me an Email!\n            </Title>\n            <Form id='contact-form' onSubmit={handleSubmit(onSubmit)} noValidate>\n              <Input\n                type='text'\n                name='name'\n                {...register('name', {\n                  required: {\n                    value: true,\n                    message: 'Please enter your name'\n                  },\n                  maxLength: {\n                    value: 30,\n                    message: 'Please use 30 characters or less'\n                  }\n                })}\n                placeholder='Name'\n              ></Input>\n              {errors.name && <span className='errorMessage'>{errors.name.message}</span>}  \n              <Input\n                type='email'\n                name='email'\n                {...register('email', {\n                  required: true,\n                  pattern:\n                    /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n                })}\n                placeholder='Email Address'\n              ></Input>\n              {errors.email && (\n                <span className='errorMessage'>Please enter a valid email address</span>\n              )} \n              <Input\n                type='text'\n                name='subject'\n                {...register('subject', {\n                  required: {\n                    value: true,\n                    message: 'Please enter a subject'\n                  },\n                  maxLength: {\n                    value: 75,\n                    message: 'Subject cannot exceed 75 characters'\n                  }\n                })}\n                placeholder='Subject'\n              ></Input>\n              {errors.subject && (\n                <span className='errorMessage'>{errors.subject.message}</span>\n              )}  \n              <TextArea\n                rows={3}\n                name='message'\n                {...register('message', {\n                  required: true\n                })}\n                placeholder='Message'\n              ></TextArea>\n              {errors.message && <span className='errorMessage'>Please enter a message</span>}\n              <Button disabled={disabled} type='submit'>\n                Send\n              </Button>\n            </Form>\n            <ToastContainer />\n          </Main>\n          <BigTitle text=\"Contact Me\" top=\"80%\" right=\"30%\" />\n        </Box>\n      </Suspense>\n    </ThemeProvider>\n  );\n};\n\nexport default ContactPage;"],"sourceRoot":""}